package analizadores;

import java_cup.runtime.Symbol;
import java.util.LinkedList;


parser code
{:
    public static LinkedList<TError> errores = new LinkedList<TError>(); 

    //Metodo al que se llama automaticamente ante algun error sintactico
    public void syntax_error(Symbol s)
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
      
        System.out.println("!!!!!!! Error Sintactico Recuperado !!!!!!!");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);

        TError tmp = new TError("Sintactico",lexema,"Caracter no esperado",fila,columna);
        errores.add(tmp);
        
    }

    //Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        
        System.out.println("!!!!!!! Error Sintactico, Panic Mode !!!!!!! ");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);
        
        TError tmp = new TError("Sintactico",lexema, "Caracter no esperado",fila,columna);
        errores.add(tmp);
     
    }
:}


terminal pComa,Conj,dPuntos,ID,Flecha,Notacion,DosPorcentajes,Cadena;

non terminal INICIO,CONJUNTOS,EXPRESIONES,PORPOR,LEXEMA;

start with INICIO;

INICIO ::= 
    CONJUNTOS EXPRESIONES PORPOR LEXEMA 
    {:System.out.println("Fin de analisis de entrada");:}
;

CONJUNTOS ::= 
    Conj dPuntos ID Flecha Notacion pComa
    |Conj dPuntos ID Flecha Notacion pComa CONJUNTOS
;
EXPRESIONES ::=
    ID Flecha pComa |
    ID Flecha pComa EXPRESIONES
;
PORPOR ::=
    DosPorcentajes |
    DosPorcentajes PORPOR
;

LEXEMA ::=
    ID dPuntos Cadena pComa |
    ID dPuntos Cadena pComa LEXEMA
;