package analizadores;

import java_cup.runtime.Symbol;
import java.util.LinkedList;

//@author moi

parser code
{:
    public static LinkedList<TError> errores = new LinkedList<TError>();
    //public static LinkedList<> = new LinkedList<>
    public String strExpresion="";
    public String strOP="";
    //Metodo al que se llama automaticamente ante algun error sintactico
    public void syntax_error(Symbol s)
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
      
        System.out.println("!!!!!!! Error Sintactico Recuperado !!!!!!!");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);

        TError tmp = new TError("Sintactico",lexema,"Caracter no esperado",fila,columna);
        errores.add(tmp);
        
    }

    //Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        
        System.out.println("!!!!!!! Error Sintactico, Panic Mode !!!!!!! ");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);
        
        TError tmp = new TError("Sintactico",lexema, "Caracter no esperado",fila,columna);
        errores.add(tmp);
     
    }
    //HACER UNA LISTA ENLAZA CON NODS PERRONES PARA BOTNER 
:}


terminal parentesisa,conj,dpuntos,id,flecha,notacion,por,interrogacion,mas,punto,or,expresion,pcoma,dosporcentajes,cadena,parentesisb;

non terminal INICIO,CONJUNTO,EXPRESION,PORPOR,LEXEMA, S,A,B,C;

start with INICIO;

INICIO::=
    parentesisa 
    CONJUNTO 
    EXPRESION
    PORPOR 
    LEXEMA 
    parentesisb
    {:System.out.println("Fin de analisis de entrada");:}
;

CONJUNTO::=
   conj dpuntos id flecha notacion pcoma
   |conj dpuntos id flecha notacion pcoma CONJUNTO
;
C::= 
    expresion:a {:System.out.println("1------->"+a);:}
    |expresion:a por:b {:System.out.println("2------->"+a+b);:}
    |expresion:a interrogacion:b {:System.out.println("3------->"+a+b);:}
    |expresion:a mas:b {:System.out.println("4------->"+a+b);:}

    |cadena:a {:System.out.println("5------->"+a);:}
    |cadena:a por:b {:System.out.println("6------->"+a+b);:}
    |cadena:a interrogacion:b {:System.out.println("7------->"+a+b);:}
    |cadena:a mas:b {:System.out.println("8------->"+a+b);:}
;
S::=C
    |C or:a S {:System.out.println("15------>"+a);:}
    |C punto:a S {:System.out.println("16------>"+a);:}
    |C S
;
EXPRESION::=
    id flecha S:e pcoma {:System.out.println("END------>"+e);:}
    |id flecha S pcoma EXPRESION
;
PORPOR::=
    dosporcentajes
    |dosporcentajes PORPOR
;
LEXEMA::=
    id dpuntos cadena pcoma
    |id dpuntos cadena pcoma LEXEMA
;