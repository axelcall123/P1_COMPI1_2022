package analizadores;

import java_cup.runtime.Symbol;
import java.util.LinkedList;

//@author moi

parser code
{:
    public static LinkedList<TError> errores = new LinkedList<TError>(); 

    //Metodo al que se llama automaticamente ante algun error sintactico
    public void syntax_error(Symbol s)
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
      
        System.out.println("!!!!!!! Error Sintactico Recuperado !!!!!!!");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);

        TError tmp = new TError("Sintactico",lexema,"Caracter no esperado",fila,columna);
        errores.add(tmp);
        
    }

    //Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        
        System.out.println("!!!!!!! Error Sintactico, Panic Mode !!!!!!! ");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);
        
        TError tmp = new TError("Sintactico",lexema, "Caracter no esperado",fila,columna);
        errores.add(tmp);
     
    }
:}


terminal parentesisa,conj,dpuntos,id,flecha,notacion,pcoma,dosporcentajes;

non terminal INICIO,CONJUNTO,EXPRESION,PORPOR;

start with INICIO;

INICIO::=parentesisa CONJUNTO EXPRESION PORPOR{:System.out.println("Fin de analisis de entrada");:}
;

CONJUNTO::=
   conj dpuntos id flecha notacion pcoma
   |conj dpuntos id flecha notacion pcoma CONJUNTO
;
EXPRESION::=
    id flecha pcoma
    |id flecha pcoma EXPRESION
;
PORPOR::=
    dosporcentajes
    |dosporcentajes PORPOR
;